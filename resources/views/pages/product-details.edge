@layout.app()
  @slot('main')
    <div x-data="ProductDetails()" x-init="loadProduct()" class="min-h-screen bg-gray-50">
      <!-- Header -->
      <header class="bg-orange-100 shadow-md">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div class="flex justify-between items-center py-6">
            <div class="flex items-center">
              <a href="/" class="text-2xl font-bold text-orange-600">QuelMerce</a>
            </div>
            <nav class="flex space-x-8">
              @include('components/cart')
              @include('components/user-profile')
            </nav>
          </div>
        </div>
      </header>

      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <!-- Loading State -->
        <div x-show="isLoading" class="text-center py-12">
          <div class="inline-flex items-center px-4 py-2 font-semibold leading-6 text-orange-500">
            <svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-orange-500" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
              <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
              <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
            </svg>
            Carregando produto...
          </div>
        </div>

        <!-- Product Details -->
        <div x-show="!isLoading && product" class="space-y-8">
          <!-- Breadcrumb -->
          <nav class="text-sm text-gray-500">
            <ol class="flex items-center space-x-2">
              <li>
                <a href="/" class="hover:text-orange-600">Home</a>
              </li>
              
              <!-- Renderiza as categorias dinamicamente -->
              <template x-for="cat in breadcrumb" :key="cat.id">
                <li class="flex items-center">
                  <svg class="w-4 h-4 mx-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                  </svg>
                  <a :href="`/category/${cat.id}`" 
                     class="hover:text-orange-600"
                     x-text="cat.name"></a>
                </li>
              </template>
        
              <!-- Produto -->
              <li class="flex items-center">
                <svg class="w-4 h-4 mx-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                </svg>
                <span x-text="product.name"></span>
              </li>
            </ol>
          </nav>

          <!-- Product Main Info -->
          <div class="bg-white rounded-lg shadow-sm border p-6">
            <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
              <!-- Product Images -->
              <div class="space-y-4">
                <!-- Main Image -->
                <div class="aspect-w-1 aspect-h-1 w-full overflow-hidden rounded-lg">
                  <img 
                    :src="product.thumbnailUrl || '/default-product.png'" 
                    :alt="product.name"
                    class="w-full h-96 object-cover object-center rounded-lg border"
                  />
                </div>
                
                <!-- Image Gallery (for future multiple images) -->
                <div x-show="product.images && product.images.length > 1" class="grid grid-cols-4 gap-2">
                  <template x-for="(image, index) in product.images" :key="index">
                    <button 
                      @click="selectImage(image)"
                      class="aspect-w-1 aspect-h-1 w-full overflow-hidden rounded-lg border-2 hover:border-orange-500 transition-colors"
                      :class="selectedImage === image ? 'border-orange-500' : 'border-gray-200'"
                    >
                      <img 
                        :src="image" 
                        :alt="`${product.name} - Imagem ${index + 1}`"
                        class="w-full h-20 object-cover object-center"
                      />
                    </button>
                  </template>
                </div>
              </div>

              <!-- Product Info -->
              <div class="space-y-6">
                <div>
                  <h1 class="text-3xl font-bold text-gray-900 mb-2" x-text="product.name"></h1>
                  <p class="text-lg text-gray-600" x-text="product.description || 'Descrição não disponível'"></p>
                </div>

                <!-- Price -->
                <div class="flex items-baseline space-x-2">
                  <span class="text-3xl font-bold text-orange-600" x-text="`${formatPrice(product.price)}`"></span>
                  <span class="text-sm text-gray-500">à vista</span>
                </div>

                <!-- SKU -->
                <div x-show="product.sku" class="text-sm text-gray-500">
                  <span class="font-medium">SKU:</span>
                  <span x-text="product.sku"></span>
                </div>

                <!-- Add to Cart Button -->
                <div class="space-y-4">
                  <div class="flex items-center space-x-4">
                    <label for="quantity" class="text-sm font-medium text-gray-700">Quantidade:</label>
                    <div class="flex items-center border border-gray-300 rounded-md">
                      <button 
                        @click="decreaseQuantity()"
                        class="px-3 py-2 text-gray-600 hover:text-gray-800 transition-colors"
                        :disabled="quantity <= 1"
                      >
                        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 12H4"></path>
                        </svg>
                      </button>
                      <input 
                        type="number" 
                        id="quantity"
                        x-model="quantity"
                        min="1"
                        class="w-16 text-center border-0 focus:ring-0 focus:outline-none"
                      />
                      <button 
                        @click="increaseQuantity()"
                        class="px-3 py-2 text-gray-600 hover:text-gray-800 transition-colors"
                      >
                        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                        </svg>
                      </button>
                    </div>
                  </div>
                  
                  <button 
                    @click="addToCart()"
                    class="w-full bg-orange-600 text-white py-3 px-6 rounded-md hover:bg-orange-700 transition-colors font-medium text-lg"
                  >
                    Adicionar ao Carrinho
                  </button>
                </div>
              </div>
            </div>
          </div>

          <!-- Technical Specifications -->
          <div class="bg-white rounded-lg shadow-sm border p-6">
            <h2 class="text-2xl font-bold text-gray-900 mb-6">Especificações Técnicas</h2>
            
            <div class="space-y-6">
              <!-- Logístico -->
              <div>
                <h3 class="text-lg font-semibold text-gray-800 mb-3 border-b border-gray-200 pb-2">Logístico</h3>
                <div class="grid grid-cols-1 gap-4">
                  <div class="flex justify-between items-center py-2 border-b border-gray-100">
                    <span class="text-gray-600">Comprimento da Embalagem</span>
                    <span class="font-medium">25 cm</span>
                  </div>
                  <div class="flex justify-between items-center py-2 border-b border-gray-100">
                    <span class="text-gray-600">Peso Bruto</span>
                    <span class="font-medium">0.5 kg</span>
                  </div>
                </div>
              </div>

              <!-- Fiscal -->
              <div>
                <h3 class="text-lg font-semibold text-gray-800 mb-3 border-b border-gray-200 pb-2">Fiscal</h3>
                <div class="grid grid-cols-1 gap-4">
                  <div class="flex justify-between items-center py-2 border-b border-gray-100">
                    <span class="text-gray-600">NCM</span>
                    <span class="font-medium">8708.99.00</span>
                  </div>
                </div>
              </div>

              <!-- Técnico -->
              <div>
                <h3 class="text-lg font-semibold text-gray-800 mb-3 border-b border-gray-200 pb-2">Técnico</h3>
                <div class="grid grid-cols-1 gap-4">
                  <div class="flex justify-between items-center py-2 border-b border-gray-100">
                    <span class="text-gray-600">Material</span>
                    <span class="font-medium">Aço Inoxidável</span>
                  </div>
                  <div class="flex justify-between items-center py-2 border-b border-gray-100">
                    <span class="text-gray-600">Garantia</span>
                    <span class="font-medium">12 meses</span>
                  </div>
                </div>
              </div>
            </div>
          </div>

          <!-- Vehicle Compatibility -->
          <div class="bg-white rounded-lg shadow-sm border p-6">
            <h2 class="text-2xl font-bold text-gray-900 mb-6">Veículos Compatíveis</h2>
            
            <!-- Loading State for Vehicles -->
            <div x-show="isLoadingVehicles" class="text-center py-8">
              <div class="inline-flex items-center px-4 py-2 font-semibold leading-6 text-orange-500">
                <svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-orange-500" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                  <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                  <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                </svg>
                Carregando veículos compatíveis...
              </div>
            </div>

            <!-- Vehicles Table -->
            <div x-show="!isLoadingVehicles" class="overflow-x-auto">
              <table class="min-w-full divide-y divide-gray-200">
                <thead class="bg-gray-50">
                  <tr>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                      Marca
                    </th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                      Modelo
                    </th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                      Ano
                    </th>
                  </tr>
                </thead>
                <tbody class="bg-white divide-y divide-gray-200">
                  <template x-if="vehicles.length === 0">
                    <tr>
                      <td colspan="3" class="px-6 py-4 text-center text-gray-500">
                        Nenhum veículo compatível encontrado
                      </td>
                    </tr>
                  </template>
                  
                  <template x-for="vehicle in vehicles" :key="vehicle.id">
                    <tr class="hover:bg-gray-50">
                      <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900" x-text="vehicle.brand?.name || 'N/A'"></td>
                      <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500" x-text="vehicle.model?.name || 'N/A'"></td>
                      <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500" x-text="vehicle.year || 'N/A'"></td>
                    </tr>
                  </template>
                </tbody>
              </table>
            </div>
          </div>
        </div>

        <!-- Error State -->
        <div x-show="!isLoading && !product && error" class="text-center py-12">
          <div class="max-w-md mx-auto">
            <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.172 16.172a4 4 0 015.656 0M9 12h6m-6-4h6m2 5.291A7.962 7.962 0 0112 15c-2.34 0-4.47-.881-6.08-2.33"></path>
            </svg>
            <h3 class="mt-2 text-sm font-medium text-gray-900">Erro ao carregar produto</h3>
            <p class="mt-1 text-sm text-gray-500" x-text="error"></p>
            <div class="mt-6">
              <a href="/" class="inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-orange-600 hover:bg-orange-700">
                Voltar para Home
              </a>
            </div>
          </div>
        </div>
      </div>
    </div>

    <script>
      function ProductDetails() {
        return {
            product: null,
            vehicles: [],
            selectedImage: null,
            quantity: 1,
            isLoading: true,
            isLoadingVehicles: false,
            error: null,

            async loadProduct() {
                try {
                    const productId = this.getProductId();
                    const response = await fetch(`/api/products/${productId}?includes=category,years`);
                    
                    if (response.ok) {
                        this.product = await response.json();
                        this.selectedImage = this.product.thumbnailUrl;
                        this.loadCompatibleVehicles();
                    } else {
                        this.error = 'Produto não encontrado';
                    }
                } catch (error) {
                    console.error('Erro ao carregar produto:', error);
                    this.error = 'Erro ao carregar produto';
                } finally {
                    this.isLoading = false;
                }
            },

            async loadCompatibleVehicles() {
                if (!this.product || !this.product.years) return;
                
                this.isLoadingVehicles = true;
                try {
                    this.vehicles = this.product.years || [];
                } catch (error) {
                    console.error('Erro ao carregar veículos:', error);
                } finally {
                    this.isLoadingVehicles = false;
                }
            },

            selectImage(image) {
                this.selectedImage = image;
            },

            increaseQuantity() {
                this.quantity++;
            },

            decreaseQuantity() {
                if (this.quantity > 1) {
                    this.quantity--;
                }
            },

            addToCart() {
                if (!this.product) return;
                
                window.Alpine.store('cart').addItem({
                    id: this.product.id,
                    name: this.product.name,
                    price: this.product.price,
                    thumbnailUrl: this.product.thumbnailUrl
                }, this.quantity);
                
                window.Alpine.store('toast').toast(
                    `${this.quantity}x ${this.product.name} adicionado ao carrinho!`, 
                    'success', 
                    3000
                );
            },

            getProductId() {
                const pathParts = window.location.pathname.split('/');
                return pathParts[pathParts.length - 1];
            },

            formatPrice(price) {
                if (!price) return '0,00';
                return parseFloat(price).toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' });
            },

            get breadcrumb() {
                if (!this.product.category) return [];
                const trail = [];
                let current = this.product.category;
                while (current) {
                    trail.unshift(current);
                    current = current.parent;
                }
                return trail;
            }
        };
    }
      
    </script>
  @endslot
@end
